-- MySQL dump 10.19  Distrib 10.3.34-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: 127.0.0.1    Database: jmind
-- ------------------------------------------------------
-- Server version	10.5.9-MariaDB-1:10.5.9+maria~focal

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `links`
--

DROP TABLE IF EXISTS `links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `links` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `a` int(11) DEFAULT NULL,
  `r` int(11) DEFAULT NULL,
  `b` int(11) DEFAULT NULL,
  `data` timestamp NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `idx_nodes_a` (`a`),
  KEY `idx_nodes_r` (`r`),
  KEY `idx_nodes_b` (`b`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `links`
--

LOCK TABLES `links` WRITE;
/*!40000 ALTER TABLE `links` DISABLE KEYS */;
INSERT INTO `links` VALUES (1,1,2,3,'2021-05-19 02:01:32'),(2,4,5,7,'2021-05-19 03:16:15'),(3,4,5,8,'2021-05-19 03:16:27'),(4,4,5,7,'2021-05-19 03:24:57'),(5,4,5,6,'2021-05-19 03:29:40'),(6,7,8,9,'2021-10-07 21:35:50'),(7,7,8,9,'2021-10-07 21:36:59'),(8,7,8,9,'2021-10-07 21:37:27'),(9,7,8,10,'2021-10-07 23:02:46'),(10,7,8,10,'2021-10-07 23:10:39'),(11,7,8,10,'2021-10-07 23:10:59'),(12,7,11,12,'2021-10-07 23:12:59'),(13,7,11,13,'2021-10-07 23:13:25'),(14,7,11,14,'2021-10-07 23:13:39'),(15,7,15,16,'2021-10-07 23:14:53'),(16,7,15,17,'2021-10-07 23:15:57'),(17,7,8,18,'2021-10-07 23:35:41'),(18,7,11,19,'2021-10-07 23:37:04'),(19,7,11,20,'2021-10-08 01:57:14'),(20,7,11,21,'2021-10-08 01:57:42'),(21,7,11,22,'2021-10-08 01:58:06'),(22,7,23,24,'2021-11-22 21:25:42'),(23,7,23,25,'2021-11-22 21:26:08'),(24,7,23,26,'2021-11-22 21:26:32'),(25,7,23,25,'2021-11-22 21:28:02'),(26,7,23,27,'2021-11-22 21:30:33'),(27,7,23,28,'2021-11-22 21:30:46'),(28,7,23,29,'2021-11-22 21:32:53'),(29,30,23,29,'2021-11-22 21:37:34'),(30,31,23,29,'2021-11-22 21:37:47');
/*!40000 ALTER TABLE `links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `symbols`
--

DROP TABLE IF EXISTS `symbols`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `symbols` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  `info` mediumtext CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  `data` timestamp NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `symbols`
--

LOCK TABLES `symbols` WRITE;
/*!40000 ALTER TABLE `symbols` DISABLE KEYS */;
INSERT INTO `symbols` VALUES (1,'java.lang.String','br.ifce.mind.NaiveMind','2021-05-19 02:01:32'),(2,'java.lang.String','EmptyAction','2021-05-19 02:01:32'),(3,'java','/**\n * MInD - Model for Intelligence Development\n * by Renato Lenz Costalima\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \n */\npackage br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class EmptyAction extends AbstractAction {\n\n	public void act(Object args, Object callback) {\n		callback(callback, null);\n	}\n\n}\n','2021-05-19 02:01:32'),(4,'java.lang.String','a','2021-05-19 03:16:15'),(5,'java.lang.String','new','2021-05-19 03:16:15'),(6,'java','/**\n * MInD - Model for Intelligence Development\n * by Renato Lenz Costalima\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \n */\npackage br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\nimport br.ifce.mind.Agent;\nimport br.ifce.mind.Ceed;\n\npublic class New extends AbstractAction {\n\n	public void act(Object args, Object callback) {\n		Agent a = Ceed.getAgent((String) args);\n		callback(callback, a);\n	}\n\n}\n','2021-05-19 03:29:40'),(7,'java.lang.String','Agenda','2021-10-07 21:35:50'),(8,'java.lang.String','GUI','2021-10-07 21:35:50'),(9,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\nimport br.ifce.agenda.controlador.Agenda;\n\npublic class GUI extends AbstractAction {\n	public void act(Object args, Object callback) {\n		Agenda a = new Agenda();\n		a.menu();\n		callback(callback, a);\n	}\n}','2021-10-07 21:35:50'),(10,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\nimport br.ifce.agenda.controlador.Agenda;\nimport java.awt.BorderLayout;\nimport java.awt.FlowLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JTextField;\nimport javax.swing.table.DefaultTableModel;\n\nimport br.ifce.agenda.Pessoa;\nimport br.ifce.mvc.Visao;\n\nimport br.ifce.mind.Agent;\n\npublic class GUI extends AbstractAction {\n	public void act(Object args, Object callback) {\n		Agent controlador = this.getAgent();\n		JFrame frame = new JFrame();\n\n		JPanel pForm = new JPanel();\n		JLabel label1, label2;\n		label1 = new JLabel(\"Name: \");\n		label2 = new JLabel(\"Phone: \");\n		final JTextField txName, txPhone;\n		txName = new JTextField(20);\n		txName.setName(\"nome\");\n		txPhone = new JTextField(20);\n		txPhone.setName(\"matricula\");\n		JButton button1 = new JButton(\"Insert\");\n		JButton button2 = new JButton(\"List\");\n		final JButton button3 = new JButton(\"Editando: false\");\n\n		JTable table = new JTable();\n		JScrollPane scroll = new JScrollPane(table);\n		DefaultTableModel model = new DefaultTableModel(new String [][] {}, new String [] {\"ID\", \"Name\", \"Phone\"});\n		table.setModel(model);\n		table.setFillsViewportHeight(true);\n		scroll.setName(\"scroll\");\n				\n		frame.setLayout(new BorderLayout());\n		frame.add(pForm, BorderLayout.PAGE_START);\n		pForm.setLayout(new FlowLayout());\n		pForm.add(label1);\n		pForm.add(txName);\n		pForm.add(label2);\n		pForm.add(txPhone);\n		pForm.add(button1);\n		pForm.add(button2);\n		frame.add(scroll, BorderLayout.CENTER);\n\n		frame.setVisible(true);\n		//frame.setSize(760, 512);\n		frame.pack();\n		frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\n		frame.addWindowListener(new WindowAdapter() {\n			public void windowClosing(WindowEvent e) {\n				controlador.see(\"sair\");\n			}\n		});\n		frame.setVisible(true);\n		\n		\n		button1.addActionListener(new ActionListener() {\n			public void actionPerformed(ActionEvent e) {\n				controlador.see(\"inserir\", new Pessoa(txName.getText(), txPhone.getText()));\n			}\n		});\n\n		button2.addActionListener(new ActionListener() {\n			public void actionPerformed(ActionEvent e) {\n				controlador.see(\"listar\");\n			}\n		});\n		callback(callback, frame);\n	}\n}','2021-10-07 23:02:46'),(11,'java.lang.String','listar','2021-10-07 23:12:59'),(12,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Listar extends AbstractAction {\n	public void act(Object args, Object callback) {\n		callback(callback, \"oi\");\n	}\n}','2021-10-07 23:12:59'),(13,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Listar extends AbstractAction {\n	public void act(Object args, Object callback) {\n		System.out.println(\"oi\");\n		callback(callback, null);\n	}\n}','2021-10-07 23:13:25'),(14,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Listar extends AbstractAction {\n	public void act(Object args, Object callback) {\n		System.out.println(\"oi!!\");\n		callback(callback, null);\n	}\n}','2021-10-07 23:13:39'),(15,'java.lang.String','sair','2021-10-07 23:14:53'),(16,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Sair extends AbstractAction {\n	public void act(Object args, Object callback) {\n		System.out.println(\"tchau\");\n		callback(callback, null);\n	}\n}','2021-10-07 23:14:53'),(17,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Sair extends AbstractAction {\n	public void act(Object args, Object callback) {\n		System.out.println(\"tchau\");\n		System.exit(0);\n		callback(callback, null);\n	}\n}','2021-10-07 23:15:57'),(18,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\nimport br.ifce.agenda.controlador.Agenda;\nimport java.awt.BorderLayout;\nimport java.awt.FlowLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JTextField;\nimport javax.swing.JCheckBox;\nimport javax.swing.table.DefaultTableModel;\n\nimport br.ifce.agenda.Pessoa;\nimport br.ifce.mvc.Visao;\n\nimport br.ifce.mind.Agent;\n\npublic class GUI extends AbstractAction {\n	public void act(Object args, Object callback) {\n        Agent controlador = this.getAgent();\n		JFrame frame = new JFrame();\n\n		JPanel pForm = new JPanel();\n		JLabel label1, label2;\n		label1 = new JLabel(\"Name: \");\n		label2 = new JLabel(\"Phone: \");\n		final JTextField txName, txPhone;\n		txName = new JTextField(20);\n		txName.setName(\"nome\");\n		txPhone = new JTextField(20);\n		txPhone.setName(\"matricula\");\n		JButton button1 = new JButton(\"Insert\");\n		JButton button2 = new JButton(\"List\");\n		JCheckBox cbEditar = new JCheckBox(\"Editar\");\n		final JButton button3 = new JButton(\"Editando: false\");\n\n		JTable table = new JTable();\n		JScrollPane scroll = new JScrollPane(table);\n		DefaultTableModel model = new DefaultTableModel(new String [][] {}, new String [] {\"ID\", \"Name\", \"Phone\"});\n		table.setModel(model);\n		table.setFillsViewportHeight(true);\n		scroll.setName(\"scroll\");\n				\n		frame.setLayout(new BorderLayout());\n		frame.add(pForm, BorderLayout.PAGE_START);\n		pForm.setLayout(new FlowLayout());\n		pForm.add(label1);\n		pForm.add(txName);\n		pForm.add(label2);\n		pForm.add(txPhone);\n		pForm.add(button1);\n		pForm.add(button2);\n		pForm.add(cbEditar);\n		frame.add(scroll, BorderLayout.CENTER);\n\n		frame.setVisible(true);\n		//frame.setSize(760, 512);\n		frame.pack();\n		frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\n		frame.addWindowListener(new WindowAdapter() {\n			public void windowClosing(WindowEvent e) {\n				controlador.see(\"sair\");\n			}\n		});\n		frame.setVisible(true);\n		\n		\n		button1.addActionListener(new ActionListener() {\n			public void actionPerformed(ActionEvent e) {\n                if (cbEditar.isSelected()) {			\n                    controlador.see(\"ask\", \"inserir\");\n                }\n                else {\n                    controlador.see(\"inserir\", new Pessoa(txName.getText(), txPhone.getText()));\n                }\n			}\n		});\n\n		button2.addActionListener(new ActionListener() {\n			public void actionPerformed(ActionEvent e) {\n                if (cbEditar.isSelected()) {			\n                    controlador.see(\"ask\", \"listar\");\n                }\n                else {\n                    controlador.see(\"listar\");\n                }\n			}\n		});\n		callback(callback, frame);\n	}\n}','2021-10-07 23:35:41'),(19,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Listar extends AbstractAction {\n	public void act(Object args, Object callback) {\n		System.out.println(\"oi!\");\n		callback(callback, null);\n	}\n}','2021-10-07 23:37:04'),(20,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Listar extends AbstractAction {\n	public void act(Object args, Object callback) {\n		System.out.println(\"oi!!!\");\n		callback(callback, null);\n	}\n}','2021-10-08 01:57:14'),(21,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Listar extends AbstractAction {\n	public void act(Object args, Object callback) {\n		System.out.println(\"oi!!!\" + this.getAgent());\n		callback(callback, null);\n	}\n}','2021-10-08 01:57:42'),(22,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class Listar extends AbstractAction {\n	public void act(Object args, Object callback) {\n		System.out.println(\"oi!\" + this.getAgent());\n		callback(callback, null);\n	}\n}','2021-10-08 01:58:06'),(23,'java.lang.String','addClasspath','2021-11-22 21:25:42'),(24,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class AddClasspath extends AbstractAction<String> {\n	public void act(Object newClasspath, Object callback) {\n		System.out.println(System.getProperty(\"path.separator\"));\n		callback(callback, null);\n	}\n}','2021-11-22 21:25:42'),(25,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class AddClasspath extends AbstractAction<String> {\n	public void act(String newClasspath, Object callback) {\n		System.out.println(System.getProperty(\"path.separator\"));\n		callback(callback, null);\n	}\n}','2021-11-22 21:26:08'),(26,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class AddClasspath extends AbstractAction<String> {\n	public void act(String newClasspath, Object callback) {\n		System.out.println(System.getProperties().getProperty(\"path.separator\"));\n		callback(callback, null);\n	}\n}','2021-11-22 21:26:32'),(27,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class AddClasspath extends AbstractAction<String> {\n	public void act(String addClasspath, Object callback) {Agent agent = this.getAgent();\n		agent.see(\"get\", \"classpath\", new AbstractAction() {\n			public void act(Object classpath, Object callback2) {\n\n				String separator = System.getProperty(\"path.separator\");\n				String newClasspath = classpath + separator + addClasspath;\n//				agent.see(\"set\", newClasspath);\n				callback(callback, newClasspath);\n			}\n		});\n		\n	}\n}','2021-11-22 21:30:33'),(28,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.Agent;\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class AddClasspath extends AbstractAction<String> {\n	public void act(String addClasspath, Object callback) {Agent agent = this.getAgent();\n		agent.see(\"get\", \"classpath\", new AbstractAction() {\n			public void act(Object classpath, Object callback2) {\n\n				String separator = System.getProperty(\"path.separator\");\n				String newClasspath = classpath + separator + addClasspath;\n//				agent.see(\"set\", newClasspath);\n				callback(callback, newClasspath);\n			}\n		});\n		\n	}\n}','2021-11-22 21:30:46'),(29,'java','package br.ifce.mind.actions;\n\nimport br.ifce.mind.Agent;\nimport br.ifce.mind.actions.AbstractAction;\n\npublic class AddClasspath extends AbstractAction<String> {\n	public void act(String addClasspath, Object callback) {Agent agent = this.getAgent();\n		agent.see(\"get\", \"classpath\", new AbstractAction() {\n			public void act(Object classpath, Object callback2) {\n\n				String separator = System.getProperty(\"path.separator\");\n				String newClasspath = classpath + separator + addClasspath;\n				agent.see(\"set\", new Object[] {\"classpath\", newClasspath}, callback);\n			}\n		});\n		\n	}\n}','2021-11-22 21:32:53'),(30,'java.lang.String','Ceed','2021-11-22 21:37:34'),(31,'java.lang.String','NaiveMind','2021-11-22 21:37:47');
/*!40000 ALTER TABLE `symbols` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-09-12 23:29:06
